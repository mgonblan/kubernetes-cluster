#cloud-config
# vim: syntax=yaml
#

datasource:
  Azure:
    agent_command: __builtin__
    apply_network_config: true
    data_dir: /var/lib/waagent
    dhclient_lease_file: /var/lib/dhcp/dhclient.eth0.leases
    disk_aliases:
      ephemeral0: /dev/disk/cloud/azure_resource
    hostname_bounce:
      interface: eth0
      command: builtin
      policy: true
      hostname_command: hostname
    set_hostname: true
users:
  - default
  - name: azureuser
    gecos: azureuser
    primary_group: docker
    groups: [sudo,docker]
package_update: true
package_upgrade: true
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
  - docker-ce 
  - docker-ce-cli 
  - containerd.io
  - kubelet 
  - kubeadm 
  - kubectl
apt:
  conf: |
      APT {
          Get {
              Assume-Yes 'true';
              Fix-Broken 'true';
          }
      }
  preserve_sources_list: true
  sources:
    docker.list:
      keyid: '9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88'
      keyserver: 'https://download.docker.com/linux/ubuntu/gpg'
      source: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu  $RELEASE stable'
    kubernetes.list:
      keyserver: 'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
      source: 'deb https://apt.kubernetes.io/ kubernetes-xenial main'
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----
        
        mQENBFrBaNsBCADrF18KCbsZlo4NjAvVecTBCnp6WcBQJ5oSh7+E98jX9YznUCrN
        rgmeCcCMUvTDRDxfTaDJybaHugfba43nqhkbNpJ47YXsIa+YL6eEE9emSmQtjrSW
        IiY+2YJYwsDgsgckF3duqkb02OdBQlh6IbHPoXB6H//b1PgZYsomB+841XW1LSJP
        YlYbIrWfwDfQvtkFQI90r6NknVTQlpqQh5GLNWNYqRNrGQPmsB+NrUYrkl1nUt1L
        RGu+rCe4bSaSmNbwKMQKkROE4kTiB72DPk7zH4Lm0uo0YFFWG4qsMIuqEihJ/9KN
        X8GYBr+tWgyLooLlsdK3l+4dVqd8cjkJM1ExABEBAAG0QEdvb2dsZSBDbG91ZCBQ
        YWNrYWdlcyBBdXRvbWF0aWMgU2lnbmluZyBLZXkgPGdjLXRlYW1AZ29vZ2xlLmNv
        bT6JATgEEwECACwFAlrBaNsJEGoDCyG6B/T7AhsPBQkFo5qABgsJCAcDAgYVCAIJ
        CgsEFgIDAQAAJr4IAM5lgJ2CTkTRu2iw+tFwb90viLR6W0N1CiSPUwi1gjEKMr5r
        0aimBi6FXiHTuX7RIldSNynkypkZrNAmTMM8SU+sri7R68CFTpSgAvW8qlnlv2iw
        rEApd/UxxzjYaq8ANcpWAOpDsHeDGYLCEmXOhu8LmmpY4QqBuOCM40kuTDRd52PC
        JE6b0V1t5zUqdKeKZCPQPhsS/9rdYP9yEEGdsx0V/Vt3C8hjv4Uwgl8Fa3s/4ag6
        lgIf+4SlkBAdfl/MTuXu/aOhAWQih444igB+rvFaDYIhYosVhCxP4EUAfGZk+qfo
        2mCY3w1pte31My+vVNceEZSUpMetSfwit3QA8EE=
        =csu4
        -----END PGP PUBLIC KEY BLOCK-----
bootcmd:
  - sysctl --system
runcmd:
  - cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
    overlay
    br_netfilter
    EOF
  - sudo modprobe overlay
  - sudo modprobe br_netfilter
  - cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.ipv4.ip_forward                 = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    EOF
  - sudo sysctl --system
  - mkdir -p /etc/containerd
  - containerd config default > /etc/containerd/config.toml
  - sed -i 's/systemd_cgroup = false/systemd_cgroup = true/g' /etc/containerd/config.toml
  - iptables -A INPUT -p tcp --dport 6443 -j ACCEPT
  - systemctl daemon-reload
  - systemctl restart containerd
  - systemctl enable containerd
  - systemctl enable kubelet